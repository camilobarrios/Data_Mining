library(dismo)  #dismo package
library(raster)
library(rJava)  #rJava package
library(maptools)
#library(rasterVis)
library(ENMeval)
library(rgdal)
library(sdm)
library(rmaxent)
library(gbm)
library(corrplot)
library(doParallel)
library(randomForest)
library(kernlab)
library(sp)
library(rgeos)
load("C:/Users/camil/Dropbox/Projects 2021/Vinculum/Data Analysis/Results-Agroclimatic indices maps/data analysis.RData")
library(rgeos)
####### define number of cores #######
nc = 16
ary(randomForest)
library(kernlab)
library(sp)
ary(randomForest)
library(kernlab)
library(sp)
gplot(maps) +
geom_raster(aes(fill = value)) +
facet_wrap(~ variable, labeller = labeller(variable =
c("ens" = "Ensemble using all variables",
"ens2" = "Ensemble the most important variables"))) +
scale_fill_distiller("Suitability", palette = "Spectral") +
theme_bw() +
labs(title = "Agroclimatic Suitability for Coffee Production in Planadas Colombia",
subtitle = "Growing season: Principal",
x = "Longitude",
y = "Latitude")
install.packages("gtools")
gplot(maps) +
geom_raster(aes(fill = value)) +
facet_wrap(~ variable, labeller = labeller(variable =
c("ens" = "Ensemble using all variables",
"ens2" = "Ensemble the most important variables"))) +
scale_fill_distiller("Suitability", palette = "Spectral") +
theme_bw() +
labs(title = "Agroclimatic Suitability for Coffee Production in Planadas Colombia",
subtitle = "Growing season: Principal",
x = "Longitude",
y = "Latitude")
library(ggplot2)
gplot(maps) +
geom_raster(aes(fill = value)) +
facet_wrap(~ variable, labeller = labeller(variable =
c("ens" = "Ensemble using all variables",
"ens2" = "Ensemble the most important variables"))) +
scale_fill_distiller("Suitability", palette = "Spectral") +
theme_bw() +
labs(title = "Agroclimatic Suitability for Coffee Production in Planadas Colombia",
subtitle = "Growing season: Principal",
x = "Longitude",
y = "Latitude")
install.packages("gplots")
gplot(maps) +
geom_raster(aes(fill = value)) +
facet_wrap(~ variable, labeller = labeller(variable =
c("ens" = "Ensemble using all variables",
"ens2" = "Ensemble the most important variables"))) +
scale_fill_distiller("Suitability", palette = "Spectral") +
theme_bw() +
labs(title = "Agroclimatic Suitability for Coffee Production in Planadas Colombia",
subtitle = "Growing season: Principal",
x = "Longitude",
y = "Latitude")
library(gplots)
gplot(maps) +
geom_raster(aes(fill = value)) +
facet_wrap(~ variable, labeller = labeller(variable =
c("ens" = "Ensemble using all variables",
"ens2" = "Ensemble the most important variables"))) +
scale_fill_distiller("Suitability", palette = "Spectral") +
theme_bw() +
labs(title = "Agroclimatic Suitability for Coffee Production in Planadas Colombia",
subtitle = "Growing season: Principal",
x = "Longitude",
y = "Latitude")
plot(en2, main= "Ensemble using weighted averaging based on AUC statistic - Using the most important variables")
a = 5
data = read.table("clipboard", header = T)
data$Cluster <- factor(data$Cluster)
library(ggplot2)
library(ggrepel)
devtools::install_github("slowkow/ggrepel")
require(ggplot2)
require(ggrepel)
View(data)
ggplot(data, aes(x = ID, y = Yield)) +
geom_point(aes(color = Cluster, size = 1))+
geom_text_repel(aes(label = Name,  color = Cluster), size = 3)
help("plot")
a=5
a=5
a=5
print(a)
a
b = c(1,2,3,4,5)
b
#Acceder a los elementos de un vector
b[2]
#Acceder a los elementos de un vector
b[5]
b[3:5]
b+a
c = b+a
print(c)
c
d=b*c
d
dia = c(11:18)
dia
tmax = c(10,14,13,15.5,16.9, 20.5, 22.3)
tamx
tmax
tmax[5]
tmax[-1] #Mostrar valores de tmax, pero omita el primer valor
tmax[-5] #Mostrar valores de tmax, pero omita el primer valor
tmax[dia==14]
dia
tmax
tmax[dia==14]
tmax[tmax>15]
a = matrix(1:8, 4,4, byrow = TRUE)
View(a)
a = matrix(1:8, nrow=4, ncol=4, byrow = FALSE)
View(a)
a = matrix(1:8, nrow=4, ncol=4)
View(a)
a = matrix(1:8, nrow=4, ncol=4, byrow = T)
View(a)
a
a[2,2]
a[,2]
a[3,]
b = a*5
View(b)
b = a/5
View(b)
View(b)
View(a)
c = a+b
View(c)
M = matrix(1:9, nrow = 3, ncol = 4, byrow = T)
M = matrix(1:9, nrow = 3, ncol = 4, byrow = F)
M = matrix(1:9, nrow = 3, ncol = 4, byrow = T)
View(M)
M = matrix(1:9, nrow = 3, ncol = 4, byrow = F)
View(M)
ejm = c(10,14,13,15.5,16.9, 20.5, 22.3, 25, 33, 16.5, 9.8)
ejm
a = ejm [1]
length(ejm)
1:length(ejm)
i=2
ejm[i]+(ejm[i-1])
ejm[1-1]
ejm[i]+(ejm[1-1])
for (i in 2:length(ejm)) {
#i=2
b = ejm[i]+(ejm[i-1])
print(b)
}
b = ejm [1]
for (i in 2:length(ejm)) {
#i=2
b = ejm[i] + b
print(b)
}
ejm = c(10,14,13,15.5,16.9, 20.5, 22.3, 25, 33, 16.5, 9.8)
b = ejm [1]
for (i in 2:length(ejm)) {
b = ejm[i] + b
print(b)
}
ejm = data.frame(c(10,14,13,15.5,16.9, 20.5, 22.3, 25, 33, 16.5, 9.8))
View(ejm)
names(ejm)[1]= c("ejm")
View(ejm)
ejm$acumulato = NA
View(ejm)
ejm$acumulato [1] = b
ejm [1,2] = b
b = ejm [1]
View(b)
b = ejm [1,2]
b = ejm [1,1]
ejm [1,2] = b
View(ejm)
for (i in 2:length(ejm)) {
b = ejm[i] + b
ejm [i,2] = b
}
View(ejm)
nrow(ejm)
b = ejm [1,1]
ejm [1,2] = b
for (i in 2:nrow(ejm)) {
b = ejm[i] + b
ejm [i,2] = b
}
View(ejm)
ejm$acumulato = NA
b = ejm [1,1]
ejm [1,2] = b
2:nrow(ejm)
for (i in 2:nrow(ejm)) {
b = ejm[i,1] + b
ejm [i,2] = b
}
View(ejm)
# Get the Working Directory
getwd()
library(ncdf4)
library (raster)
library(maptools)
library(maptools)
library(rgdal)
library(rgdal)
getData('ISO3')
Cote.dIvoire = getData(name = "GADM", country ="Côte d'Ivoire"
, level = 1)
plot(Cote.dIvoire)
Cote.dIvoire@data
library(raster)
Tmax_Daily = stack("E:/Disk_Camilo Barrios Perez/Climatic data bases/ERA5-Land/Temperature_Daily/Maximum Temperature/Daily Max Temp per year_2010-2020/Max_Temp_Daily_All.Rasters_1-1-2010_31-12-2010.nc")
Tmax_Daily
plot(JFM_Tmax_Daily[[1]])
plot(Tmax_Daily[[1]])
points = read.table("clipboard", header = T)
View(points)
rm(points)
plot(Tmax_Daily[[1]])
points(puntos, col="red")
puntos = read.table("clipboard", header = T)
plot(Tmax_Daily[[1]])
points(puntos, col="red")
puntos = read.table("clipboard", header = T)
plot(Tmax_Daily[[1]])
points(puntos, col="red")
map = Tmax_Daily[[1]]
writeRaster(map, "C:/Users/camil/OneDrive/Escritorio/Coffee points/Temp Map.tif")
## Kriging - The Three Steps ##
library(ggmap)
library(raster)
#Extent <- extent(c(11.8, 15.1, 50.1, 51.7)) # roughly the extent of Saxony
Extent <- extent(c(-76.2, -74, 1.5, 6)) # roughly the extent of Tolima and Huila
GoogMap <- get_map(c(
left = Extent[1],
right = Extent[2],
bottom = Extent[3],
top = Extent[4]
))
ggmap(GoogMap)+
theme_bw() + labs(x="Longitude", y="Latitude")
#Extent <- extent(c(11.8, 15.1, 50.1, 51.7)) # roughly the extent of Saxony
#Extent <- extent(c(-76.2, -74, 1.5, 6)) # roughly the extent of Tolima and Huila
Extent <- extent(c(-76.8, -74.3, 1.3, 4)) # roughly the extent of Huila
GoogMap <- get_map(c(
left = Extent[1],
right = Extent[2],
bottom = Extent[3],
top = Extent[4]
))
ggmap(GoogMap)+
theme_bw() + labs(x="Longitude", y="Latitude")
points(puntos, col="red")
setwd("C:/Users/camil/Dropbox/Projects 2021/Proyecto EAFIT/Clases/Semana 14/Base de datos_Análisis exploratorio")
setwd("C:/Users/camil/Dropbox/Projects 2021/Proyecto EAFIT/Clases/Semana 14/Base de datos_Análisis exploratorio")
data=read.table("Base de datos_Análisis exploratorio_Cultivo de arroz.csv",head=T,sep=",")
data_2=subset(data, select = c(Station, Soil_2, PARCUM, Total_Pre_all_CS, Total_Rice_CWR_all_CS, Total_IWR_all_CS,
Num_DD,Number_DS,Num_WD,Number_WS,
Num_HD_Tmax, Num_HW_Tmax,Num_HD_Tmin,
Num_HW_Tmin, Yield))
library(corrplot)
corrplot(data_2, method="shade", shade.col= cols, tl.col="black", tl.srt=45,
order="AOE", type="lower", cl.pos="b", col = cols)
data_2=subset(data, select = c(PARCUM, Total_Pre_all_CS, Total_Rice_CWR_all_CS, Total_IWR_all_CS,
Num_DD,Number_DS,Num_WD,Number_WS,
Num_HD_Tmax, Num_HW_Tmax,Num_HD_Tmin,
Num_HW_Tmin, Yield))
corrplot(data_2, method="shade", shade.col= cols, tl.col="black", tl.srt=45,
order="AOE", type="lower", cl.pos="b", col = cols)
install.packages("GGally")
library("GGally")
library(ggplot2)
ggpairs(data_2)
ggplot(data_2, aes(x=reorder(Station,Total_Pre_all_CS,na.rm = TRUE), y=Total_Pre_all_CS)) +
geom_boxplot()+
coord_flip()
data_2=subset(data, select = c(Station, Soil_2, PARCUM, Total_Pre_all_CS, Total_Rice_CWR_all_CS, Total_IWR_all_CS,
Num_DD,Number_DS,Num_WD,Number_WS,
Num_HD_Tmax, Num_HW_Tmax,Num_HD_Tmin,
Num_HW_Tmin, Yield))
ggplot(data_2, aes(x=reorder(Station,Total_Pre_all_CS,na.rm = TRUE), y=Total_Pre_all_CS)) +
geom_boxplot()+
coord_flip()
ggplot(data_2, aes(x=reorder(Station,Total_Pre_all_CS,na.rm = TRUE), y=Total_Pre_all_CS)) +
geom_boxplot()+
labs(title="Gráfica de rendimiento del cultivo \n por estación", x ="Estación meteorológica", y = "Rendimiento (kg/ha)") +
coord_flip()
ggplot(data_2, aes(x=reorder(Station,Total_Pre_all_CS,na.rm = TRUE), y=Total_Pre_all_CS)) +
geom_boxplot()+
labs(title="Gráfica de rendimiento del cultivo \n por estación meteorológica", x ="Estación meteorológica", y = "Rendimiento (kg/ha)") +
coord_flip()
ggplot(data_2, aes(x=Total_Pre_all_CS)) + geom_histogram()
View(data_2)
# Basic histogram
ggplot(data_2, aes(x=Yield)) + geom_histogram()
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(binwidth=1)
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(binwidth=5)
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(binwidth=10)
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(color="black", fill="white")
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(color="black", fill="red")
p = ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(color="black", fill="red")
p = ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(color="black", fill="white")
p+ geom_vline(aes(xintercept=mean(Total_Pre_all_CS)),
color="blue", linetype="dashed", size=1)
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
# Histogram with density plot
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
#geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
ggplot(data_2, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(data_2, aes(x=reorder(Station,Total_Pre_all_CS,na.rm = TRUE), y=Total_Pre_all_CS)) +
geom_boxplot()+
labs(title="Gráfica de rendimiento del cultivo \n por estación meteorológica", x ="Estación meteorológica", y = "Rendimiento (kg/ha)") +
coord_flip()
ggplot(data_2, aes(x=reorder(Station,Total_Pre_all_CS,na.rm = TRUE), y=Total_Pre_all_CS)) +
geom_boxplot()+
labs(title="Gráfica de precipitación acumulada \n por estación meteorológica", x ="Estación meteorológica", y = "Rendimiento (kg/ha)") +
coord_flip()
Ibague = subset(data_2, Station == "11_Tolima_Ibague", select=c(Total_Pre_all_CS, Yield))
Neiva = subset(data_2, Station == "9_Huila_Neiva", select=c(Total_Pre_all_CS, Yield))
estaciones = rbind(Ibague,Neiva)
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
View(estaciones)
Ibague = subset(data_2, Station == "11_Tolima_Ibague", select=c(Station, Total_Pre_all_CS, Yield))
Neiva = subset(data_2, Station == "9_Huila_Neiva", select=c(Station, Total_Pre_all_CS, Yield))
estaciones = rbind(Ibague,Neiva)
# Overlaid histograms
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
estaciones = rbind(Neiva, Ibague)
# Overlaid histograms
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="dodge")
rams
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(alpha=0.5, position="dodge")
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="dodge")+
labs(title="Histogramas", x ="Precipitación acumulada")
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="dodge")+
labs(title="Histogramas", x ="Precipitación acumulada")+
theme_bw()
Ibague = subset(data_2, Station == "11_Tolima_Ibague", select=c(Station, Total_Pre_all_CS, PARCUM, Num_HD_Tmin, Yield))
Neiva = subset(data_2, Station == "9_Huila_Neiva", select=c(Station, Total_Pre_all_CS, PARCUM, Num_HD_Tmin, Yield))
estaciones = rbind(Neiva, Ibague)
# Basic scatter plot
ggplot(estaciones, aes(x=Total_Pre_all_CS, y=Yield)) + geom_point()
# Basic scatter plot
ggplot(estaciones, aes(x=PARCUM, y=Yield)) + geom_point()
# Basic scatter plot
ggplot(estaciones, aes(x=Num_HD_Tmin, y=Yield)) + geom_point()
ggplot(estaciones, aes(x=PARCUM, y=yield)) +
geom_point()+
geom_smooth(method=lm)
ggplot(estaciones, aes(x=PARCUM, y=Yield)) +
geom_point()+
geom_smooth(method=lm)
# Loess method
ggplot(estaciones, aes(x=PARCUM, y=Yield)) +
geom_point()+
geom_smooth()
ggplot(estaciones, aes(x=Num_HD_Tmin, y=Yield)) +
geom_point()+
geom_smooth()
ggplot(estaciones, aes(x=Num_HD_Tmin, y=Yield)) +
geom_point()+
geom_smooth() +
theme_bw() # fondo blanco y líneas de cuadrícula grises
ggplot(estaciones, aes(x=PARCUM, y=Yield)) +
geom_point()+
geom_smooth() +
theme_bw() # fondo blanco y líneas de cuadrícula grises
ggpairs(estaciones)
ggpairs(estaciones)
data_2=subset(data, select = c(PARCUM, Total_Pre_all_CS, Total_Rice_CWR_all_CS, Total_IWR_all_CS,
Num_DD,Number_DS,Num_WD,Number_WS,
Num_HD_Tmax, Num_HW_Tmax,Num_HD_Tmin,
Num_HW_Tmin, Yield))
library(usdm)
VIF_var <- vifstep(data_2,th = 10)
VIF_var
setwd("C:/Users/camil/Dropbox/Projects 2021/Proyecto EAFIT/Clases/Semana 14/Base de datos_Análisis exploratorio")
library(ggplot2)
library(dbplyr)
library(tidyverse)
library(funModeling)
data=read.table("Base de datos_Análisis exploratorio_Cultivo de arroz.csv",head=T,sep=",")
data_2=subset(data, select = c(Station, Soil_2, PARCUM, Total_Pre_all_CS, Total_Rice_CWR_all_CS, Total_IWR_all_CS,
Num_DD,Number_DS,Num_WD,Number_WS,
Num_HD_Tmax, Num_HW_Tmax,Num_HD_Tmin,
Num_HW_Tmin, Yield))
# Column names
colnames(data_2)
unique(data_2$Station)
ggplot(data_2, aes(x=Station, y=Yield)) +
geom_boxplot()
ggplot(data_2, aes(x=reorder(Station,Total_Pre_all_CS,na.rm = TRUE), y=Total_Pre_all_CS)) +
geom_boxplot()+
labs(title="Gráfica de precipitación acumulada \n por estación meteorológica", x ="Estación meteorológica", y = "Rendimiento (kg/ha)") +
coord_flip()
ggplot(data_2, aes(x=reorder(Station,-Total_Pre_all_CS,na.rm = TRUE), y=Total_Pre_all_CS)) +
geom_boxplot()+
labs(title="Gráfica de precipitación acumulada \n por estación meteorológica", x ="Estación meteorológica", y = "Rendimiento (kg/ha)") +
coord_flip()
ggplot(data_2, aes(x=Total_Pre_all_CS)) + geom_histogram()
# Histograma básico
ggplot(data_2, aes(x=Yield)) + geom_histogram()
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(binwidth=5)
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(color="black", fill="white")
p = ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(color="black", fill="white")
p + geom_vline(aes(xintercept=mean(Total_Pre_all_CS)),
color="blue", linetype="dashed", size=1)
# histograma con gráfica de densidad
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
ggplot(data_2, aes(x=Total_Pre_all_CS)) +
#  geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
View(data_2)
Ibague = subset(data_2, Station == "11_Tolima_Ibague", select=c(Station, Total_Pre_all_CS, PARCUM, Num_HD_Tmin, Yield))
View(Ibague)
Neiva = subset(data_2, Station == "9_Huila_Neiva", select=c(Station, Total_Pre_all_CS, PARCUM, Num_HD_Tmin, Yield))
estaciones = rbind(Neiva, Ibague)
View(estaciones)
View(estaciones)
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="dodge")
ggplot(estaciones, aes(x=Total_Pre_all_CS, color=Station)) +
geom_histogram(fill="white", alpha=0.5, position="dodge")+
labs(title="Histogramas", x ="Precipitación acumulada")+
theme_bw() # fondo blanco y líneas de cuadrícula grises
ggplot(estaciones, aes(x=PARCUM, y=Yield)) + geom_point()
ggplot(estaciones, aes(x=PARCUM, y=Yield)) +
geom_point()+
geom_smooth(method=lm) # Método lineal
ggplot(estaciones, aes(x=Num_HD_Tmin, y=Yield)) +
geom_point()
# Método Loess (Regresión ajustada a los datos)
ggplot(estaciones, aes(x=Num_HD_Tmin, y=Yield)) +
geom_point()+
geom_smooth() +
theme_bw()
library("GGally") # Esta librería permite aplicar  varias funciones gráficas para el análisis de los datos.
ggpairs(estaciones)
data_2=subset(data, select = c(PARCUM, Total_Pre_all_CS, Total_Rice_CWR_all_CS, Total_IWR_all_CS,
Num_DD,Number_DS,Num_WD,Number_WS,
Num_HD_Tmax, Num_HW_Tmax,Num_HD_Tmin,
Num_HW_Tmin, Yield))
ggpairs(data_2)
ggpairs(data_2)
VIF_var <- vifstep(data_2,th = 10)
VIF_var
# Reduce the predictor stack to the relevant layers
New_data_2 <- exclude(data_2, VIF_var) # Use only the selected variables
View(New_data_2)
